---
import BaseLayout from '@/layouts/Base.astro';
import Card from '@/components/Card.astro';
---

<BaseLayout title="アイコンチェッカー", description="アイコンの属性及びレア度を判断するサイト">
	<main>
		<h1>アイコンチェッカー</h1>
		<p class="instructions">
      このサイトは、アイコンの属性及びレア度を判断するサイトです。<br>
		</p>
    <!-- Twitterのユーザ名を入力させる -->
    <p>TwitterのIDを入力してください。</p><br>
    <p class="flex flex-row">
      <input type="text" name="id" placeholder="TwitterのIDを入力してください。" required>
      <button id="submit_botton" class="flex justify-center btn btn-blue">送信</button>
    </p>
    <p id="loading" class="center"></p><br>
    <div class="flex justify-center">
      <ul id="preview">
      </ul>
    </div>
	</main>
</Layout>

<style>
	main {
		margin: auto;
		padding: 1rem;
		width: 800px;
		max-width: calc(100% - 2rem);
		color: white;
		font-size: 20px;
		line-height: 1.6;
	}
	.astro-a {
		position: absolute;
		top: -32px;
		left: 50%;
		transform: translatex(-50%);
		width: 220px;
		height: auto;
		z-index: -1;
	}
	h1 {
		font-size: 4rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
		margin-bottom: 1em;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		margin-bottom: 2rem;
		border: 1px solid rgba(var(--accent-light), 25%);
		background: linear-gradient(rgba(var(--accent-dark), 66%), rgba(var(--accent-dark), 33%));
		padding: 1.5rem;
		border-radius: 8px;
	}
	.instructions code {
		font-size: 0.8em;
		font-weight: bold;
		background: rgba(var(--accent-light), 12%);
		color: rgb(var(--accent-light));
		border-radius: 4px;
		padding: 0.3em 0.4em;
	}
	.instructions strong {
		color: rgb(var(--accent-light));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 2rem;
		padding: 0;
	}
  input {
    width: calc(100% - 100px);
    height: 40px;
    padding: 0px 10px;
    font-size: 16px;
    border-radius: 4px;
    border: 1px solid #ccc;
    outline: none;
    color: #333;
    margin: 0 10px;
  }
  .btn {
    @apply font-bold py-2 px-4 rounded;
  }
  .btn-blue {
    @apply bg-blue-500 text-white;
  }
  .btn-blue:hover {
    @apply bg-blue-700;
  }
</style>

<script>
  type Tag = Array<{
    className: string;
    probability: number;
  }>

  async function fetchData() {
    console.log("fetching...")
    const loadingElem: HTMLParagraphElement | null = document.getElementById('loading') as HTMLParagraphElement | null;
    if (!loadingElem) {
      alert('What the hell?');
      return;
    }
    loadingElem.innerText = "データを取得中です。";
    const elem: HTMLInputElement | null = document.querySelector('input[name="id"]');
    if (!elem) {
      alert('What the hell?');
      return;
    }
    const id = elem.value;
    if (!id) {
      alert('IDを入力してください。');
      return;
    }
    const getData = async (only: "star" | "attr") => {
      let data;
      try {
        const url = `https://rating-icon.pages.dev/api/ai?twitter=${id}&only=${only}`;
        const res = await fetch(url);
        if (res.status !== 200) {
          throw new Error('メインサーバーが落ちているため、代替サーバーを使用します。');
        }
        data = await res.json();
      } catch (e) {
        console.log('メインサーバーが落ちているため、代替サーバーを使用します。');
        console.log(e);
        const url = `https://tk2-123-61994.vs.sakura.ne.jp/ai_api/api/ai?twitter=${id}&only=${only}`
        const res2 = await fetch(url);
        if (res2.status !== 200) {
          alert('代替サーバーも落ちているため、しばらくしてから再度お試しください。');
          return;
        }
        data = await res2.json();
      }
      console.log(data);
      return data;
    }
    const starData = await getData("star");
    const attrData = await getData("attr");
    if (!starData || !attrData) {
      alert('データの取得に失敗しました。');
      return;
    }
    const star: Tag = starData.star;
    const attr: Tag = attrData.attr;
    const imgUrl: string = starData.img;
    const getTop = (data: Tag) => {
      let top;
      let topName;
      for (const starData of data) {
        if (!top || starData.probability > top.probability) {
          top = starData;
          topName = starData.className;
        }
      }
      return topName;
    }
    loadingElem.innerText = "";
    const previewElem: HTMLUListElement | null = document.getElementById('preview') as HTMLUListElement | null;
    if (!previewElem) {
      alert('What the hell?');
      return;
    }
    const starTop = getTop(star);
    const attrTop = getTop(attr);
    const starElem = document.createElement('li');
    const divElem = document.createElement('div');
    divElem.style.display = 'flex';
    divElem.style.alignItems = 'center';
    divElem.style.marginBottom = '20px';
    divElem.style.justifyContent = 'center';
    // 横に並べる
    const imgElem = document.createElement('img');
    const starTextElem = document.createElement('p');
    const attrTextElem = document.createElement('p');
    imgElem.src = imgUrl;
    imgElem.width = 100;
    imgElem.height = 100;
    imgElem.alt = 'アイコン';
    imgElem.style.borderRadius = '50%';
    imgElem.style.marginRight = '20px';
    starTextElem.innerText = `レア度: ${starTop}`;
    attrTextElem.innerText = `属性: ${attrTop}`;
    starTextElem.style.marginRight = '20px';
    starTextElem.style.fontSize = '20px';
    attrTextElem.style.fontSize = '20px';
    // id
    const idElem = document.createElement('p');
    idElem.innerText = `ID: ${id}`;
    idElem.style.fontSize = '20px';
    idElem.style.marginLeft = '20px';
    divElem.appendChild(imgElem);
    divElem.appendChild(starTextElem);
    divElem.appendChild(attrTextElem);
    divElem.appendChild(idElem);
    starElem.appendChild(divElem);
    previewElem.appendChild(starElem);
  }
  const submitButton = document.getElementById('submit_botton');
  if (submitButton) {
    submitButton.addEventListener('click', fetchData);
  }
  const input = document.querySelector('input[name="id"]');
  if (input) {
    input.addEventListener('keydown', (e) => {
      if ((e as KeyboardEvent).key === 'Enter') {
        fetchData();
      }
    });
  }
</script>
